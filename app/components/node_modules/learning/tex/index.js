// MODULES //

import Radium from 'radium';
import React, { Component } from 'react';
import katex from 'katex';
import isString from '@stdlib/utils/is-string';


// LATEX //

class TeX extends Component {
	/**
	* React component render method.
	*/
	render() {
		const input = isString( this.props.raw ) ? this.props.raw : this.props.raw.toString();
		let str;

		try {
			str = katex.renderToString( input, {
				displayMode: this.props.displayMode
			});
		} catch ( e ) {
			str = '';
		}
		let math = {
			__html: str
		};
		if ( this.props.displayMode === true ) {
			return (
				<div
					className="tex"
					style={[ this.props.style ]}
					onClick={this.props.onClick}
				>
					<div
						style={{
							float: 'right',
							marginTop: 5,
							marginRight: 5
						}}
					>
					[{this.props.id}]
					</div>
					<span
						ref="katex"
						dangerouslySetInnerHTML={math}
						aria-hidden={!!math}
					/>
				</div>
			);
		}
		else {
			return (
				<span
					className="tex"
					style={[ this.props.style ]}
					onClick={this.props.onClick}
				>
					<span
						ref="katex"
						dangerouslySetInnerHTML={math}
						aria-hidden={!!math}
						style={{ whiteSpace: 'nowrap' }}
					/>
				</span>
			);
		}
	}
}

// PROPERTY TYPES //

TeX.propTypes = {
	raw: React.PropTypes.oneOfType([
		React.PropTypes.string,
		React.PropTypes.number
	]).isRequired,
	style: React.PropTypes.object,
	displayMode: React.PropTypes.bool,
	id: React.PropTypes.number,
	onClick: React.PropTypes.func
};


// DEFAULT PROPERTIES //

TeX.defaultProps = {
	onClick: null,
	displayMode: false,
	id: NaN,
	style: {}
};


// EXPORTS //

export default Radium( TeX );
