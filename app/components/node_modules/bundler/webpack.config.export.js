// MODULES //

const webpack = require( 'webpack' );
const path = require( 'path' );


// CONFIG //

const config = {
	module: {
		loaders: [
			{
				test: /\.js?$/,
				loader: require.resolve( 'babel-loader' ),
				exclude: path.join( __dirname, '../../../../node_modules' ),
				query: {
					plugins: [
						require.resolve( 'babel-plugin-add-module-exports' )
					],
					presets: [
						require.resolve( 'babel-preset-es2015' ),
						require.resolve( 'babel-preset-react' ),
						require.resolve( 'babel-preset-stage-0' )
					],
					babelrc: false
				},
			},
			{
				test: /\.json$/,
				loader: 'json-loader'
			},
			{
				test: /\.txt$/,
				loader: 'raw-loader'
			},
			{
				test: /img\/[A-Z]*\.svg$/i,
				loader: 'file-loader?name=./img/[name].[ext]',
				include: [
					path.join( __dirname, '../../../../img' )
				]
			}
		],
		noParse: /node_modules\/json-schema\/lib\/validate\.js/
	},
	resolve: {
		root: [
			path.join( __dirname, '../../../../node_modules' ),
			path.join( __dirname, '../' )
		],
	},
	node: {
		fs: 'empty',
		net: 'empty',
		tls: 'empty'
	},
	plugins: [
		new webpack.DefinePlugin({
			'process.env': {
				NODE_ENV: '"production"'
			}
		}),
		new webpack.IgnorePlugin( /vertx/ ),
		new webpack.ProvidePlugin({
			'window.d3': 'd3'
		}),
		new webpack.optimize.UglifyJsPlugin({
			output: {
				comments: false
			},
			compress: true,
			mangle: true
		})
	]
};


// EXPORTS //

module.exports = config;
