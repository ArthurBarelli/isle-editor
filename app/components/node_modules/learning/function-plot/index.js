// MODULES //

import React from 'react';
import functionPlot from 'function-plot';
import copy from 'utils-copy';
import isFunction from 'validate.io-function';


// FUNCTIONS //

function processData( d ) {
	const dat = copy( d );
	if ( isFunction( dat.fun ) ) {
		if ( !dat.graphType ) {
			dat.graphType = 'polyline';
		}
		dat._fn = dat.fun;
		dat.fn = function wrapper( scope ) {
			return dat._fn( scope.x );
		};
	}
	if ( dat.points ) {
		if ( !dat.graphType ) {
			dat.graphType = 'scatter';
		}
		if ( !dat.fnType ) {
			dat.fnType = 'points';
		}
	}
	return dat;
}


// FUNCTION PLOT //

const FunctionPlot = React.createClass({
	/**
	* Property types.
	*/
	propTypes: {
		data: React.PropTypes.array.isRequired,
		width: React.PropTypes.number,
		height: React.PropTypes.number,
		id: React.PropTypes.string.isRequired,
		title: React.PropTypes.string,
		disableZoom: React.PropTypes.bool,
	},
	/**
	* Set default properties.
	*/
	getDefaultProps() {
		return ({
			disableZoom: true,
			title: null,
			height: 250,
			width: 250
		});
	},
	/**
	* Create function plot.
	*/
	getInitialState() {
		return {
			_data: this.props.data.map( processData )
		};
	},
	/**
	* After initial rendering, invoke `functionPlot` and render to DIV.
	*/
	componentDidMount() {
		functionPlot({
			target: '#' + this.props.id,
			width: this.props.width,
			height: this.props.height,
			disableZoom: this.props.disableZoom,
			data: this.state._data
		});
	},
	/**
	* React component render method.
	*/
	render() {
		return (
			<div className="functionPlot" id={this.props.id}></div>
		);
	}
});


// EXPORTS //

export default FunctionPlot;
