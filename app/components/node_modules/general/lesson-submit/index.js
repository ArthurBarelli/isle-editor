// MODULES //

import React, { Component, PropTypes } from 'react';
import { Button, Modal, ControlLabel, FormControl, FormGroup } from 'react-bootstrap';
import request from 'request';


// LESSON SUBMIT //

class LessonSubmit extends Component {

	constructor( props ) {
		super( props );

		this.state = {
			showUserModal: false,
			user: '',
			email: '',
			disabled: false
		};

		this.closeUserModal = () => {
			this.setState({
				showUserModal: false
			});
		};

		this.finalizeSession = ( item ) => {
			global.ISLE.session.finalize();
			global.lesson.addNotification({
				title: 'Completed',
				message: 'Lesson successfully completed. You will receive a confirmation email shortly.',
				level: 'success',
				position: 'tr'
			});
			if ( this.props.mail ) {
				global.ISLE.sendMail( this.props.mail, global.ISLE.session.user.email );
			}
			this.setState({
				disabled: true
			});
		};

		this.handleClick = () => {
			const str = 'ISLE_USER_' + ISLE.server;
			let item = localStorage.getItem( str );
			if ( !item ) {
				this.setState({
					showUserModal: true
				});
			}
			else {
				this.finalizeSession( item );
			}
		};

		this.handleEmailInput = ( e ) => {
			this.setState({ email: e.target.value });
		};

		this.handleUserInput = ( e ) => {
			this.setState({ user: e.target.value });
		};

		this.submitRegistration = () => {
			request.get({
				url: global.ISLE.server + '/user',
				qs: {
					email: this.state.email,
					name: this.state.user
				}
			}, ( error, response, body ) => {
				if ( error ) {
					console.log( error );
				} else {
					const str = 'ISLE_USER_' + ISLE.server;
					localStorage.setItem( str, body );
					this.closeUserModal();
					this.finalizeSession( body );
				}
			});
		};
	}

	render() {
		return (
			<div className="well" style={{
				maxWidth: 400,
				margin: '0 auto 10px',
				marginTop: '30px',
				fontFamily: 'Arial'
			}}>
				<Button disabled={this.state.disabled} bsStyle="primary" bsSize="large" onClick={this.handleClick} block>{this.props.label}</Button>
				<Modal show={this.state.showUserModal} onHide={this.closeUserModal}>
					<Modal.Header closeButton>
						<Modal.Title>User Registration</Modal.Title>
					</Modal.Header>
					<Modal.Body>
						<p>Please fill in the required information to set up an ISLE user account.
						When solving ISLE lessons in the future from the current browser, you will not have to fill out this form again.
						If you are already registered before, supplying your email address suffices.</p>
						<FormGroup>
							<ControlLabel>Email Address</ControlLabel>
							<FormControl
								type="text"
								value={this.state.email}
								placeholder="Enter text"
								onChange={this.handleEmailInput}
							/>
							<ControlLabel>Full Name</ControlLabel>
							<FormControl
								type="text"
								value={this.state.user}
								placeholder="Enter text"
								onChange={this.handleUserInput}
							/>
						</FormGroup>
					</Modal.Body>
					<Modal.Footer>
						<Button onClick={this.closeUserModal}>Close</Button>
						<Button bsStyle="primary" onClick={this.submitRegistration}>Submit</Button>
					</Modal.Footer>
				</Modal>
			</div>
		);
	}
}


// DEFAULT PROPERTIES //

LessonSubmit.defaultProps = {
	label: 'Finish lesson',
	mail: null
};


// PROPERTY TYPES //

LessonSubmit.propTypes = {
	label: PropTypes.string,
	mail: PropTypes.string
};


// EXPORTS //

export default LessonSubmit;
